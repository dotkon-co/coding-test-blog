// <auto-generated />


#nullable disable

using System;
using CodingBlog.Infrastructure.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
namespace CodingBlog.Infrastructure.Migrations
{
    [DbContext(typeof(PostgresDBContext))]
    partial class PostgresDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CodingBlog.Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content of Post 1",
                            CreatedAt = new DateTime(2024, 12, 10, 20, 41, 3, 357, DateTimeKind.Local).AddTicks(2068),
                            Title = "Post 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content of Post 2",
                            CreatedAt = new DateTime(2024, 12, 10, 20, 41, 3, 357, DateTimeKind.Local).AddTicks(2198),
                            Title = "Post 2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Content of Post 3",
                            CreatedAt = new DateTime(2024, 12, 10, 20, 41, 3, 357, DateTimeKind.Local).AddTicks(2200),
                            Title = "Post 3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Content of Post 4",
                            CreatedAt = new DateTime(2024, 12, 10, 20, 41, 3, 357, DateTimeKind.Local).AddTicks(2202),
                            Title = "Post 4",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CodingBlog.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@email.com",
                            Password = "$2a$11$Bkac.XCkFgUO2QLRkZDxHOgRw4nZhgODFWQBRkwLKBZdcwpeqvAwu",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@email.com",
                            Password = "$2a$11$an8.T6LF7cAc8/1azzyQXeG5Z0YjpU/lNuOYqzHi9ldYmKXIgTAfy",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("CodingBlog.Domain.Entities.Post", b =>
                {
                    b.HasOne("CodingBlog.Domain.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodingBlog.Domain.Entities.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
